var searchIndex = JSON.parse('{\
"kemuler":{"doc":"<code>kemuler</code>","t":"OAAAAAAIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDNNNNNNNNNNNNNNNNNNNENNNEDDNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIQDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLKLLLLLLLLLLMLLLLLLLLLLLLLLLCCCCIKIK","n":["button_like_impl_body","combinator","common_inputs","input_event","prelude","simulatable","simulator","Combine","During","IterSequence","Repeat","Sequence","Sleep","SpinSleep","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","during","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_micros","for_millis","for_nanos","for_secs","for_secs_f32","for_secs_f64","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","iter_seq","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","repeat","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","run_with","seq","simulate","sleep","sleep_for_millis","then","times","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Alt","Backspace","CapsLock","Char","Control","Delete","DownArrow","End","Enter","Escape","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Home","Key","Left","LeftArrow","Middle","MouseButton","MousePosition","MouseScroll","PageDown","PageUp","Right","RightArrow","Shift","Space","StrSequence","Tab","UpArrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","click","click","click","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","down","down","down","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","move_by","move_to","partial_cmp","partial_cmp","scroll_by","set_to","set_to","set_to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","up","up","up","ChangeBy","Execute","Invert","Output","SetTo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","by","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","hash","hash","input","input","input","into","into","into","invert","invert","new","new","new","partial_cmp","partial_cmp","partial_cmp","run_with","run_with","run_with","to","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Combine","Simulatable","Sleep","SpinSleep","Simulatable","run_with","Simulate","simulate"],"q":[[0,"kemuler"],[7,"kemuler::combinator"],[212,"kemuler::common_inputs"],[365,"kemuler::input_event"],[437,"kemuler::prelude"],[441,"kemuler::simulatable"],[443,"kemuler::simulator"]],"d":["This macro generate convenient methods usable for traits …","Module of helper combinators","Generally found/a standard input","Module containing base input events.","Re-exports","Module for implementing a thing can be simulated","Module for implementing a simulator","Helper combinator trait.","","Automatically do a for loop on an iterator and simulate …","Simulate an input for amount of times","Simulate through a tuple starting from <code>.0</code>. Supported size: …","Thread sleep for amount of time.","Accurate thread sleep for amount of time using <code>spin_sleep</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simulate self during an event. After self is simulated, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","Panics","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through an iterator and simulate each item Self …","","","","","","","","","Repeat simulation for amount of times","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simulate through a tuple starting from <code>.0</code>. Self must be a …","","Simulate <code>self</code> and then sleep for duration","Simulate <code>self</code> and then sleep for duration in milliseconds","Simulate <code>self</code> and then <code>next</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alt key on Linux and Windows (option key on macOS)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Press and release the button consecutively. This is a …","Press and release the button consecutively. This is a …","Press and release the button consecutively. This is a …","","","","","","","","","","","","","","","Press the button. This is a convenience shorthand for","Press the button. This is a convenience shorthand for","Press the button. This is a convenience shorthand for","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Move mouse by x, y (move mouse relatively) This is a …","Move mouse to x, y This is a convenience shorthand for","","","Scroll mouse wheel by x, y. This is a convenience …","Set this button state This is a convenience shorthand for","Set this button state This is a convenience shorthand for","Set this button state This is a convenience shorthand for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Release the key This is a convenience shorthand for","Release the key This is a convenience shorthand for","Release the key This is a convenience shorthand for","An event of some input state is going to be changed by …","","Trait for an event that is the inverse version of self. …","","An event of some input state is going to be setted to some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simulatable is a thing that can be simulated by a …","Simulate this input.","Trait to implement for a simulator. It may support many …","Simulate this simulatable"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,44,1,2,4,5,6,7,1,2,4,5,6,7,1,1,2,2,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,7,7,2,2,2,2,2,2,1,1,1,2,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,44,1,2,1,2,4,5,6,7,44,1,2,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,7,44,4,44,44,44,4,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,31,32,0,0,0,31,31,32,31,31,31,0,31,31,31,34,35,32,33,36,31,34,35,32,33,36,31,32,33,31,34,35,32,33,36,31,34,35,32,33,36,33,36,31,32,33,31,34,35,32,33,36,31,34,35,32,33,36,36,31,31,34,34,35,35,32,32,33,36,31,34,35,32,33,33,36,36,31,34,35,32,33,36,31,34,35,32,33,36,34,34,33,36,35,31,32,33,31,34,35,32,33,36,31,34,35,32,31,34,35,32,33,36,31,34,35,32,33,36,31,34,35,32,33,36,31,32,33,0,0,0,10,0,37,42,38,37,42,38,42,37,42,38,37,42,38,37,42,38,37,42,38,37,42,38,37,37,42,42,38,38,37,42,38,37,42,38,37,42,38,37,42,38,10,37,37,42,38,37,42,38,37,42,38,37,37,42,38,37,42,38,37,42,38,37,42,38,37,42,38,0,0,0,0,0,27,0,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[[4,[3]]],[[4,[3]]]],[[[5,[3]]],[[5,[3]]]],[[[6,[3]]],[[6,[3]]]],[[[7,[3,3]]],[[7,[3,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],8],[[2,2],8],[[[4,[9]],[4,[9]]],8],[[[5,[9]],[5,[9]]],8],[[[6,[9]],[6,[9]]],8],[[[7,[9,9]],[7,[9,9]]],8],[[[0,[10,3]]],[[7,[[0,[10,3]]]]]],[[1,1],11],[[2,2],11],[[[4,[12]],[4,[12]]],11],[[[5,[12]],[5,[12]]],11],[[[6,[12]],[6,[12]]],11],[[[7,[12,12]],[7,[12,12]]],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[1,13],14],[[1,13],14],[[2,13],14],[[2,13],14],[[[4,[15]],13],14],[[[4,[16]],13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[5,13],14],[[[5,[15]],13],14],[[5,13],14],[[5,13],14],[[[6,[16]],13],14],[[[6,[15]],13],14],[[[7,[16,16]],13],14],[[[7,[15,15]],13],14],[17,2],[17,2],[17,2],[17,2],[18,2],[19,2],[20,1],[2,1],[[]],[[]],[20,2],[[]],[[]],[[]],[[]],[[1,21]],[[2,21]],[[[4,[22]],21]],[[[5,[22]],21]],[[[6,[22]],21]],[[[7,[22,22]],21]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[6,[23]]]],[20,1],[20,2],[[1,1],[[24,[8]]]],[[2,2],[[24,[8]]]],[[[4,[25]],[4,[25]]],[[24,[8]]]],[[[5,[25]],[5,[25]]],[[24,[8]]]],[[[6,[25]],[6,[25]]],[[24,[8]]]],[[[7,[25,25]],[7,[25,25]]],[[24,[8]]]],[26,4],[1],[2],[[[4,[[0,[27,3]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[[6,[23]]]],[[[7,[[0,[10,27,3]],27]]]],[[],5],0,[20,5],[17,5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,5],[32,5],[33,5],[31,31],[34,34],[35,35],[32,32],[33,33],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33],8],[[36,36],8],[31,[[37,[31,11]]]],[32,[[37,[32,11]]]],[33,[[37,[33,11]]]],[[31,31],11],[[34,34],11],[[35,35],11],[[32,32],11],[[33,33],11],[[36,36],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[36,[[38,[36]]]],[[31,13],14],[[31,13],14],[[34,13],14],[[34,13],14],[[35,13],14],[[35,13],14],[[32,13],14],[[32,13],14],[[33,13],14],[[36,13],14],[[]],[[]],[[]],[[]],[[]],[39,33],[40,36],[[]],[[31,21]],[[34,21]],[[35,21]],[[32,21]],[[33,21]],[[36,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,41,41],[[42,[34]]]],[[34,41,41],[[37,[34]]]],[[33,33],[[24,[8]]]],[[36,36],[[24,[8]]]],[[35,41,41],[[42,[35]]]],[[31,11],[[37,[31,11]]]],[[32,11],[[37,[32,11]]]],[[33,11],[[37,[33,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[31,[[37,[31,11]]]],[32,[[37,[32,11]]]],[33,[[37,[33,11]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[[37,[3,3]]],[[37,[3,3]]]],[[[42,[3,3]]],[[42,[3,3]]]],[[[38,[3]]],[[38,[3]]]],[[]],[[]],[[]],[[[37,[9,9]],[37,[9,9]]],8],[[[42,[9,9]],[42,[9,9]]],8],[[[38,[9]],[38,[9]]],8],[[[37,[12,12]],[37,[12,12]]],11],[[[42,[12,12]],[42,[12,12]]],11],[[[38,[12]],[38,[12]]],11],[[],11],[[],11],[[],11],[[[37,[15,15]],13],14],[[[37,[16,16]],13],14],[[[42,[15,15]],13],14],[[[42,[16,16]],13],14],[[[38,[16]],13],14],[[[38,[15]],13],14],[[]],[[]],[[]],[[[37,[22,22]],21]],[[[42,[22,22]],21]],[[[38,[22]],21]],0,0,0,[[]],[[]],[[]],[[]],[[[37,[11]]]],[[],37],[[],42],[[],38],[[[37,[25,25]],[37,[25,25]]],[[24,[8]]]],[[[42,[25,25]],[42,[25,25]]],[[24,[8]]]],[[[38,[25]],[38,[25]]],[[24,[8]]]],[[37,[43,[37]]]],[[42,[43,[42]]]],[[38,[43,[38]]]],0,[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],0,0,0,0,0,[[]],0,[[]]],"c":[],"p":[[3,"SpinSleep"],[3,"Sleep"],[8,"Clone"],[3,"Repeat"],[3,"Sequence"],[3,"IterSequence"],[3,"During"],[4,"Ordering"],[8,"Ord"],[8,"Invert"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Display"],[15,"u64"],[15,"f32"],[15,"f64"],[3,"Duration"],[8,"Hasher"],[8,"Hash"],[8,"IntoIterator"],[4,"Option"],[8,"PartialOrd"],[15,"usize"],[8,"Simulatable"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Key"],[4,"MouseButton"],[3,"Char"],[3,"MousePosition"],[3,"MouseScroll"],[3,"StrSequence"],[3,"SetTo"],[3,"Execute"],[15,"char"],[15,"str"],[15,"i32"],[3,"ChangeBy"],[8,"Simulate"],[8,"Combine"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
